/* alv-ch-ng.security - 0.2.0 - 2015-04-11 - Copyright (c) 2015 Informatik der Arbeitslosenversicherung; */
!function(){"use strict";var module=angular.module("alv-ch-ng.security",["ngResource","LocalStorageModule","ab-base64"]);module.run(function($rootScope,Principal,SecurityService){$rootScope.$on("$stateChangeStart",function(event,toState,toStateParams){$rootScope.toState=toState,$rootScope.toStateParams=toStateParams,Principal.isIdentityResolved()&&SecurityService.authorize()})})}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.directive("anonymous",function(Principal){return{restrict:"A",link:function(scope,element){scope.$watch(Principal.isAuthenticated,function(newValue){newValue?element.hide():element.show()})}}})}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.directive("anyRole",function(Principal){return{restrict:"A",link:function(scope,element,attrs){scope.$watch(function(){return Principal.isInAnyRole(attrs.anyRole)},function(newValue){newValue?element.show():element.hide()})}}})}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.factory("authInterceptor",["$rootScope","$q","$location","localStorageService",function($rootScope,$q,$location,localStorageService){function addTokenIfNotExpired(token,config){token&&token.expires_at&&new Date(token.expires_at).getTime()>(new Date).getTime()&&(config.headers.Authorization="Bearer "+token.access_token)}return{request:function(config){return config.headers=config.headers||{},addTokenIfNotExpired(localStorageService.get("token"),config),config}}}])}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.factory("AuthServerProvider",["$http","localStorageService","SecurityConfig","base64",function($http,localStorageService,SecurityConfig,base64){function createLoginData(credentials){return"oauth2"===SecurityConfig.getAuthType()?"username="+credentials.username+"&password="+credentials.password+"&grant_type=password&scope=read%20write&client_secret="+SecurityConfig.getClientSecret()+"&client_id="+SecurityConfig.getClientId():"j_username="+encodeURIComponent(credentials.username)+"&j_password="+encodeURIComponent(credentials.password)+"&submit=Login"}function createLoginHeaders(){return"oauth2"===SecurityConfig.getAuthType()?{"Content-Type":"application/x-www-form-urlencoded",Accept:"application/json",Authorization:"Basic "+base64.encode(SecurityConfig.getClientId()+":"+SecurityConfig.getClientSecret())}:{"Content-Type":"application/x-www-form-urlencoded"}}function createLoginRequest(data,headers){return $http.post(SecurityConfig.getAuthPath(),data,{headers:headers,ignoreAuthModule:"ignoreAuthModule"}).success(function(response){if("oauth2"===SecurityConfig.getAuthType()){var expiredAt=new Date;expiredAt.setSeconds(expiredAt.getSeconds()+response.expires_in),response.expires_at=expiredAt.getTime(),localStorageService.set("token",response)}})}function login(credentials){if("oauth2"!==SecurityConfig.getAuthType()&&"cookie"!==SecurityConfig.getAuthType())throw new Error('No or unknown authType found: "'+SecurityConfig.getAuthType()+'".');return createLoginRequest(createLoginData(credentials),createLoginHeaders())}function logout(){$http.post(SecurityConfig.getLogoutPath()).then(function(){localStorageService.clearAll()})}function getToken(){return localStorageService.get("token")}function hasValidToken(){var token=getToken();return token&&token.expires_at&&token.expires_at>(new Date).getTime()}return{login:login,logout:logout,getToken:getToken,hasValidToken:hasValidToken}}])}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.directive("authenticated",function(Principal){return{restrict:"A",link:function(scope,element){element.hide(),scope.$watch(Principal.isAuthenticated,function(){Principal.authenticated?element.show():element.hide()})}}})}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.directive("login",function(){return{restrict:"E",replace:!0,controller:"SecurityCtrl",link:function(){}}})}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.factory("Principal",["$q","$resource","SecurityConfig",function($q,$resource,SecurityConfig){function checkRoles(roles){for(var results=[],i=0;i<roles.length;i++)results.push(service.isInRole(roles[i]));return results}function splitIfString(roles){return angular.isString(roles)?roles.split(","):roles}var _identity=null,service={authenticated:!1,isIdentityResolved:function(){return service.authenticated},isAuthenticated:function(){return service.authenticated},isInRole:function(role){return role?service.authenticated&&_identity.roles?-1!==_identity.roles.indexOf(role.trim()):!1:!0},isInAnyRole:function(roles){return roles&&0!==roles.length?checkRoles(splitIfString(roles)).indexOf(!0)>-1:!0},authenticate:function(identity){_identity=identity,service.authenticated=null!==identity},identity:function(force,onUnAuthenticated){var deferred=$q.defer();return null===_identity||force?($resource(SecurityConfig.getAccountPath()).get().$promise.then(function(account){_identity=account,service.authenticated=!0,deferred.resolve(_identity)})["catch"](function(){_identity=null,service.authenticated=!1,angular.isFunction(onUnAuthenticated)&&onUnAuthenticated(),deferred.resolve(_identity)}),deferred.promise):(deferred.resolve(_identity),deferred.promise)}};return service}])}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.provider("SecurityConfig",function(){var _clientId="",_clientSecret="",_authPath="oauth/token",_logoutPath="api/logout",_registerPath="api/register",_activationPath="api/activate",_accountPath="api/account",_resendPasswordPath="api/account/resendPassword",_newPasswordPath="api/account/newPassword",_userIdParam="key",_authType="oauth2";this.setClientId=function(clientId){_clientId=clientId},this.setClientSecret=function(clientSecret){_clientSecret=clientSecret},this.setAuthPath=function(authPath){_authPath=authPath},this.setLogoutPath=function(logoutPath){_logoutPath=logoutPath},this.setRegisterPath=function(registerPath){_registerPath=registerPath},this.setActivationPath=function(activationPath){_activationPath=activationPath},this.setAccountPath=function(accountPath){_accountPath=accountPath},this.setResendPasswordPath=function(resendPasswordPath){_resendPasswordPath=resendPasswordPath},this.setNewPasswordPath=function(newPasswordPath){_newPasswordPath=newPasswordPath},this.setUserIdParam=function(userIdParam){_userIdParam=userIdParam},this.setAuthType=function(authType){_authType=authType},this.$get=function(){return{getClientId:function(){return _clientId},getClientSecret:function(){return _clientSecret},getAuthPath:function(){return _authPath},getLogoutPath:function(){return _logoutPath},getRegisterPath:function(){return _registerPath},getActivationPath:function(){return _activationPath},getAccountPath:function(){return _accountPath},getResendPasswordPath:function(){return _resendPasswordPath},getNewPasswordPath:function(){return _newPasswordPath},getUserIdParam:function(){return _userIdParam},getAuthType:function(){return _authType}}}})}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.controller("SecurityCtrl",["$scope","SecurityService",function($scope,SecurityService){$scope.credentials={username:"",password:""},$scope.login=function(){SecurityService.login($scope.credentials)},$scope.logout=function(){SecurityService.logout(),$scope.credentials={username:"",password:""}}}])}(),function(){"use strict";var module=angular.module("alv-ch-ng.security");module.factory("SecurityService",["$rootScope","$http","$q","Principal","AuthServerProvider","SecurityConfig",function($rootScope,$http,$q,Principal,AuthServerProvider,SecurityConfig){function login(credentials){AuthServerProvider.login(credentials).success(function(){Principal.identity(!0).then(function(account){angular.isFunction(_onLoginSuccess)&&_onLoginSuccess(account)})}).error(function(error){angular.isFunction(_onLoginFail)&&_onLoginFail(error)})}function logout(){AuthServerProvider.logout(),Principal.authenticate(null)}function checkAccess(){Principal.isIdentityResolved()?!Principal.isInAnyRole($rootScope.toState.data.roles)&&angular.isFunction(_onAccessDenied)&&_onAccessDenied():_onLoginRequired()}function authorize(){return Principal.identity(!1,function(){$rootScope.toState.data.roles&&$rootScope.toState.data.roles.length>0&&_onLoginRequired()}).then(function(){$rootScope.toState.data.roles&&$rootScope.toState.data.roles.length>0&&checkAccess()})}function register(account){return $http.post(SecurityConfig.getRegisterPath(),account)}function activateAccount(data){return $http.post(SecurityConfig.getActivationPath(),data)}function updateAccount(account){return $http.post(SecurityConfig.getAccountPath()+"/"+account[SecurityConfig.getUserIdParam()],account)}function getAccount(key){return $http.get(SecurityConfig.getAccountPath()+"/"+key)}function changePassword(newPassword){return $http.post(SecurityConfig.getNewPasswordPath(),{newPassword:newPassword})}function resendPassword(userName){return $http.post(SecurityConfig.getResendPasswordPath(),{userName:userName})}var _onAccessDenied,_onLoginFail=function(){},_onLoginSuccess=function(identity){Principal.authenticate(identity)},_onLoginRequired=function(){$rootScope.returnToState=$rootScope.toState,$rootScope.returnToStateParams=$rootScope.toStateParams};return{login:login,logout:logout,authorize:authorize,updateAccount:updateAccount,activateAccount:activateAccount,getAccount:getAccount,register:register,changePassword:changePassword,resendPassword:resendPassword,setOnLoginSuccess:function(onLoginSuccess){_onLoginSuccess=onLoginSuccess},setOnLoginFail:function(onLoginFail){_onLoginFail=onLoginFail},setOnAccessDenied:function(onAccessDenied){_onAccessDenied=onAccessDenied},setOnLoginRequired:function(onLoginRequired){_onLoginRequired=onLoginRequired}}}])}(),angular.module("ab-base64",[]).constant("base64",function(){var B64={alphabet:"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",lookup:null,ie:/MSIE /.test(navigator.userAgent),ieo:/MSIE [67]/.test(navigator.userAgent),encode:function(s){var result,nan0,nan1,nan2,buffer=B64.toUtf8(s),position=-1,len=buffer.length,enc=[,,,];if(B64.ie){for(result=[];++position<len;)nan0=buffer[position],nan1=buffer[++position],enc[0]=nan0>>2,enc[1]=(3&nan0)<<4|nan1>>4,isNaN(nan1)?enc[2]=enc[3]=64:(nan2=buffer[++position],enc[2]=(15&nan1)<<2|nan2>>6,enc[3]=isNaN(nan2)?64:63&nan2),result.push(B64.alphabet.charAt(enc[0]),B64.alphabet.charAt(enc[1]),B64.alphabet.charAt(enc[2]),B64.alphabet.charAt(enc[3]));return result.join("")}for(result="";++position<len;)nan0=buffer[position],nan1=buffer[++position],enc[0]=nan0>>2,enc[1]=(3&nan0)<<4|nan1>>4,isNaN(nan1)?enc[2]=enc[3]=64:(nan2=buffer[++position],enc[2]=(15&nan1)<<2|nan2>>6,enc[3]=isNaN(nan2)?64:63&nan2),result+=B64.alphabet[enc[0]]+B64.alphabet[enc[1]]+B64.alphabet[enc[2]]+B64.alphabet[enc[3]];return result},decode:function(s){if(s=s.replace(/\s/g,""),s.length%4)throw new Error("InvalidLengthError: decode failed: The string to be decoded is not the correct length for a base64 encoded string.");if(/[^A-Za-z0-9+\/=\s]/g.test(s))throw new Error("InvalidCharacterError: decode failed: The string contains characters invalid in a base64 encoded string.");var result,buffer=B64.fromUtf8(s),position=0,len=buffer.length;if(B64.ieo){for(result=[];len>position;)result.push(buffer[position]<128?String.fromCharCode(buffer[position++]):buffer[position]>191&&buffer[position]<224?String.fromCharCode((31&buffer[position++])<<6|63&buffer[position++]):String.fromCharCode((15&buffer[position++])<<12|(63&buffer[position++])<<6|63&buffer[position++]));return result.join("")}for(result="";len>position;)result+=String.fromCharCode(buffer[position]<128?buffer[position++]:buffer[position]>191&&buffer[position]<224?(31&buffer[position++])<<6|63&buffer[position++]:(15&buffer[position++])<<12|(63&buffer[position++])<<6|63&buffer[position++]);return result},toUtf8:function(s){var chr,position=-1,len=s.length,buffer=[];if(/^[\x00-\x7f]*$/.test(s))for(;++position<len;)buffer.push(s.charCodeAt(position));else for(;++position<len;)chr=s.charCodeAt(position),128>chr?buffer.push(chr):2048>chr?buffer.push(chr>>6|192,63&chr|128):buffer.push(chr>>12|224,chr>>6&63|128,63&chr|128);return buffer},fromUtf8:function(s){var len,position=-1,buffer=[],enc=[,,,];if(!B64.lookup){for(len=B64.alphabet.length,B64.lookup={};++position<len;)B64.lookup[B64.alphabet.charAt(position)]=position;position=-1}for(len=s.length;++position<len&&(enc[0]=B64.lookup[s.charAt(position)],enc[1]=B64.lookup[s.charAt(++position)],buffer.push(enc[0]<<2|enc[1]>>4),enc[2]=B64.lookup[s.charAt(++position)],64!==enc[2])&&(buffer.push((15&enc[1])<<4|enc[2]>>2),enc[3]=B64.lookup[s.charAt(++position)],64!==enc[3]);)buffer.push((3&enc[2])<<6|enc[3]);return buffer}},B64url={decode:function(input){input=input.replace(/-/g,"+").replace(/_/g,"/");var pad=input.length%4;if(pad){if(1===pad)throw new Error("InvalidLengthError: Input base64url string is the wrong length to determine padding");input+=new Array(5-pad).join("=")}return B64.decode(input)},encode:function(input){var output=B64.encode(input);return output.replace(/\+/g,"-").replace(/\//g,"_").split("=",1)[0]}};return{decode:B64.decode,encode:B64.encode,urldecode:B64url.decode,urlencode:B64url.encode}}());